services:
  postgres: #name of the service
    container_name: postgres_nftauction_container #container name
    image: postgres #repository image name
    environment:
      #- POSTGRES_USER=PostgresBarisUser we use default user name, in appsettings json
      - POSTGRES_PASSWORD=postgresbarispassword
      #- POSTGRES_DB=PostgresNFTAuctions no need to define here second time for now
    ports:
      # access Postgress Inside/Outside of Docker on that ports
      - 5432:5432
    volumes:
      #this allows Docker to use external storage to Docker, our operating system storage to store the data for our database.
      - nftauctionpostgre:/var/lib/postgresql/data
  mongodb:
    container_name: mongo_nftauction_container
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongobarispassword
    ports:
      - 27017:27017
    volumes:
      - nftauctionmongodata:/var/lib/mongodb/data
  rabbitmq: #default username and password: guest
    container_name: rabbitmq_nftauction_container
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  nfauction-service:
    container_name: app_nftauction_service_container
    image: barisozgenn/nftauction-service:latest
    build:
      context: . # root of our directory
      dockerfile: src/NFTAuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development #we're going to get the full logs about what's going on whilst running in development mode.
      - ASPNETCORE_URLS=http://+:80 #And this is the internal URL that our application, our nft auction service is going to run on.
      - ASPNETCORE_URLS=http://+:7777 #for http2 gRpc
      # What we need to use is double underscore instead of that colon or curly braces {} because "RabbitMq":{"Host"}.
      #But We're not going to be using local host, but we are going to use rabbitmq as we defined above
      #So we just specify Rabbitmq which matches the name of the container that's running inside Docker.
      - RabbitMq__Host=rabbitmq
      #So we are going to change to postgres instead of localhost. Because we will use the postgres container as we defined above
      - ConnectionStrings__DefaultBarisDevConnection=Server=postgres:5432;User Id=postgres;Password=postgresbarispassword;Database=nftauctions;
      #Same thing that we won't use our appsettins we will use our image to reach it inside Docker as we defined below
      - IdentityServerBarisDevUrl=http://identity-service
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:80
    ports:
      - 7001:80 # 7001 as the external port as we defined in launchsettins, we access this service on from outside of Docker, but internally it's going to be running on Port 80.
      - 7777:7777 #extra port number for gRPC
    depends_on:
    # nft auction service, it depends on services that we want to wait to start, like Rabbitmq or Postgres
    # We can say that our nftauction service depends on postgres and rabbitmq
      - postgres
      - rabbitmq
  #then do same for another all services
  search-service:
    container_name: app_search_service_container
    image: barisozgenn/search-service:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbBarisDevConnection=mongodb://root:mongobarispassword@mongodb #instead of localhost:27017
      - NFTAuctionServiceUrl=http://nftauction-service #instead of http://localhost:7001
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
  identity-service:
    container_name: app_identity_service_container
    image: barisozgenn/identity-service:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
    #we changed the ASP.Net Core environment from development to be Docker
    #so that it reads from appsettings.Docker.json
    #if we kept in Development environment, we could not get identity user token once they login
    #in dev environment IdentityService's IssuerUri runing on localhost://5029 in docker running on identity-service
    #so added environment checkers in HostingExtension.cs to run it any environment we are working on
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultBarisDevConnection=Server=postgres:5432;User Id=postgres;Password=postgresbarispassword;Database=identity;
    ports:
      - 5029:80
    depends_on:
      - postgres
  gateway-service:
    container_name: app_gateway_service_container
    image: barisozgenn/gateway-service:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
    #we changed the ASP.Net Core environment from development to be Docker
    #so that it reads from appsettings.Docker.json
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  bid-service:
    container_name: app_bid_service_container
    image: barisozgenn/bid-service:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoBidDbBarisDevConnection=mongodb://root:mongobarispassword@mongodb #instead of localhost:27017
      - IdentityServiceUrl=http://identity-service
      - GrpcNFTAuction=http://nfauction-service:7777
    ports:
      - 7003:80
    depends_on:
      - mongodb
      - rabbitmq
  notify-service:
    container_name: app_notify_service_container
    image: barisozgenn/notify-service:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
#  web-app:
#    container_name: app_web_app_container
#    image: barisozgenn/web-app
#    build:
#     context: .
#     dockerfile: frontend/web-app/Dockerfile
#    volumes:
#     - /var/lib/web/data
#    extra_hosts:
#     - id.nftmarketplace.com:10.5.0.200
#    environment: # those are coming from .env.local file
#    - NEXTAUTH_SECRET=somethingreallysecretbaris
#     - NEXTAUTH_URL=http://app.nftmarketplace.com #externally it's going to use this URL
#     - NEXTAUTH_URL_INTERNAL=http://web-app:3000 #internally it's going to use this URL
#     - API_URL=http://gateway-service/
#     - IDENTITY_URL=http://id.nftmarketplace.com #for externally usage, update your Hostinger in terminal
#     - NEXT_PUBLIC_NOTIFICATION_URL=http://gateway-service/notifications
#     - VIRTUAL_HOST=app.nftmarketplace.com
#     - VIRTUAL_PORT=3000
#    networks:
#      custom:
volumes:
  nftauctionpostgre:
  nftauctionmongodata: