// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NFTAuctionService.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NFTAuctionService.Data.Migrations
{
    [DbContext(typeof(NFTAuctionDbContext))]
    [Migration("20231107151107_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NFTAuctionService.Entities.NFTAuction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CurrentHighestBid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NFTAuctionEndAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReservePrice")
                        .HasColumnType("integer");

                    b.Property<string>("Seller")
                        .HasColumnType("text");

                    b.Property<int?>("SoldPrice")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Winner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NFTAuctions");
                });

            modelBuilder.Entity("NFTAuctionService.NFTAuctionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Artist")
                        .HasColumnType("text");

                    b.Property<string>("Collection")
                        .HasColumnType("text");

                    b.Property<string>("ContentUrl")
                        .HasColumnType("text");

                    b.Property<int>("IndexInCollection")
                        .HasColumnType("integer");

                    b.Property<Guid>("NFTAuctionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NFTAuctionId")
                        .IsUnique();

                    b.ToTable("NFTAuctionItems");
                });

            modelBuilder.Entity("NFTAuctionService.NFTAuctionItem", b =>
                {
                    b.HasOne("NFTAuctionService.Entities.NFTAuction", "NFTAuction")
                        .WithOne("Item")
                        .HasForeignKey("NFTAuctionService.NFTAuctionItem", "NFTAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NFTAuction");
                });

            modelBuilder.Entity("NFTAuctionService.Entities.NFTAuction", b =>
                {
                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
